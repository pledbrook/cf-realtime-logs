0.2.1
=====

 * Bumped "faye-websocket" dependency to 0.4. Updated
   code to take advantage of introduced changes.
 * Pinned "node-static" and bumped "node-uuid" dependencies.
 * Removed "Origin" header list of headers exposed to the user.
   This header is not really meaningful in sockjs context.
 * Header "Access-Control-Allow-Methods" was misspelled.


0.2.0
=====

 * #36, #3 - Replace a custom WebSocket server implementation
   with  faye-websocket-node.
 * Multiple changes to support SockJS-protocol 0.2.
    * The session is now closed on network errors immediately
      (instead of waiting 5 seconds)
    * Raw websocket interface available - to make it easier
      to write command line SockJS clients.
    * Support '/info' url.
 * The test server got moved from SockJS-client to SockJS-node.
 * Dropped deprecated Server API (use createServer method instead).
 * Option `websocket` is now used instead of `disabled_transports`.


0.1.2
=====

 * #27 - Allow all unicode characters to be send over SockJS.
 * #14 - Make it possible to customize JSESSIONID cookie logic.


0.1.1
=====

 * #32 Expose various request headers on connection.
 * #30 Expose request path on connection.


0.1.0
=====

 * The API changed, there is now an idiomatic API, modelled on node.js
   Stream API. The old API is deprecated and there is a dummy wrapper
   that emulates it. Please do upgrade to the new idiomatic API.
 * #22 Initial support for hybi13 (stephank)
 * New options accepted by the `Server` constructor: `log`,
   `heartbeat_delay` and `disconnect_delay`.
 * SockJS is now not able to send rich data structures - all data
   passed to `write` is converted to a string.
 * #23 `Connection.remoteAddress` property introduced (St√©phan Kochen)
 * Loads of small changes in order to adhere to protocol spec.


0.0.5
=====

 * #20: `npm submodule sockjs` didn't work due to outdated github
   path.


0.0.4
=====

 * Support for htmlfile transport, used by IE in a deployment
   dependent on cookies.
 * Added /chunking_test API, used to detect support for HTTP chunking
   on client side.
 * Unified code logic for all the chunking transports - the same code
   is reused for polling versions.
 * All the chunking transports are closed by the server after 128K was
   send, in order to force client to GC and reconnect.
 * Don't distribute source coffeescript with npm.
 * Minor fixes in websocket code.
 * Dropped jQuery dependency.
 * Unicode encoding could been garbled during XHR upload.
 * Other minor fixes.


0.0.3
======

 * EventSource transport didn't emit 'close' event.


0.0.2
=====

 * By default set JSESSIONID cookie, useful for load balancing.


0.0.1
=====

 * Initial release.
